/* The Groovy plugin for Gradle assumes the following layout
 * src/main/java
 * src/main/resources
 * src/main/groovy
 *
 * src/test/java
 * src/test/resources
 * src/test/groovy
 *
 * src/<sourceSet>/java
 * src/<sourceSet>/resources
 * src/<sourceSet>/groovy
 *
 * You can override or create a new sourceSet with the following snippet:
 *
 * sourceSets {
 *     main {
 *         // We can override src/main/groovy to also add src/main/zip
 *         groovy {
 *             srcDirs = ['src/main/groovy', 'src/main/zip']
 *         }
 *     }
 *     mySourceSet {
 *         groovy {
 *             srcDirs = ['src/myDir/groovy']
 *         }
 *     }
 * }
 */
import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'groovy'

defaultTasks 'distPlugin'

def buildLocaleDir = 'build/locale'

configurations {
    // Remove the groovy-all jar from runtime dependencies
    runtime.exclude module: 'groovy-all'
}

repositories {
      mavenCentral()
      flatDir {
          dirs 'libs'
      }
}

dependencies {

  compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
  compile group: 'org.codehaus.groovy.modules.http-builder', name: 'http-builder', version: '0.7'
  compile group: 'org.codehaus.jettison', name: 'jettison', version: '1.1'
  compile group: 'com.google.code.gson', name: 'gson', version: '2.2.4'
  compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
  compile group: 'xml-resolver', name: 'xml-resolver', version: '1.2'
  compile 'com.ibm.urbancode.plugins:groovy-plugin-utils:1.0'

  compile 'org.codehaus.groovy:groovy-all:2.3.6'

	compile files ("libs/uDeployRestClient.jar", "libs/HttpComponents-Util.jar")

	// testCompile group: 'junit', name: 'junit', version: '4.11'
	}

  task listJars << {
      configurations.compile.each { File file -> println file.name }
  }


  sourceSets {
      main {
          groovy {
              srcDirs = ['src/main/groovy', 'src/main/zip']
          }
      }
  }

  task copyDeps(type: Copy) {
      from configurations.runtime
      into 'lib'
  }

  task distPlugin(type: Zip, dependsOn: 'compileGroovy') {
      def releaseVersion = apiVersion + "." + pluginVersion
      from(sourceSets.main.groovy.srcDirs) {
          filter(ReplaceTokens, tokens: [API_VERSION: apiVersion, RELEASE_VERSION: releaseVersion])
      }
      into('lib') {
          from configurations.runtime
      }
      archiveName = "${pluginName}-${releaseVersion}.zip"
  }

  task cleanAll(dependsOn: ['clean', 'cleanCopyDeps', 'cleanDistPlugin'])
